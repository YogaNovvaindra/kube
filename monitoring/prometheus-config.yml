apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      scrape_timeout: 25s
      evaluation_interval: 30s

    scrape_configs:
      # Self-monitoring
      - job_name: prometheus
        static_configs:
          - targets: [localhost:9090]

      # Proxmox VE monitoring
      - job_name: proxmox
        scrape_interval: 60s
        metrics_path: /pve
        params:
          module: [default]
        static_configs:
          - targets: 
              - ${PVE_1_ENDPOINT}
              - ${PVE_2_ENDPOINT}
            labels:
              cluster: '1'
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__address__]
            regex: (.*)
            replacement: ${1}
            target_label: instance
          - target_label: __address__
            replacement: pve-exporter:9221

      # Kubernetes Node Exporter
      - job_name: kube-node
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app]
            action: keep
            regex: monitoring;node-exporter
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: instance

      # Kube State Metrics
      - job_name: kube-state-metrics
        kubernetes_sd_configs:
          - role: endpointslice
            namespaces:
              names: [monitoring]
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)

      # Kubernetes core components
      - job_name: kube-cadvisor
        scheme: https
        tls_config:
          insecure_skip_verify: true
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        metrics_path: /metrics/cadvisor
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - source_labels: [__address__]
            regex: (.+):(\d+)
            replacement: ${1}:10250
            target_label: __address__
          - source_labels: [__meta_kubernetes_node_name]
            target_label: node

      - job_name: kube-kubelet
        scheme: https
        tls_config:
          insecure_skip_verify: true
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - source_labels: [__address__]
            regex: (.+):(\d+)
            replacement: ${1}:10250
            target_label: __address__
          - source_labels: [__meta_kubernetes_node_name]
            target_label: node

      - job_name: kube-apiservers
        kubernetes_sd_configs:
          - role: endpointslice
            namespaces:
              names: [default]
        scheme: https
        tls_config:
          insecure_skip_verify: true
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels:
              [__meta_kubernetes_endpointslice_label_kubernetes_io_service_name, 
               __meta_kubernetes_endpointslice_port_name]
            action: keep
            regex: kubernetes;https

      # CoreDNS monitoring
      - job_name: kube-dns
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: [kube-system]
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_k8s_app]
            action: keep
            regex: kube-dns
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            replacement: $1:9153

      # Services monitoring
      - job_name: adguard
        scrape_interval: 60s
        static_configs:
          - targets: [adguard-exporter:9618]
            labels:
              instance: adguard-exporter

      - job_name: authentik
        scrape_interval: 60s
        static_configs:
          - targets: [authentik-server.tools.svc.cluster.local:9300]
            labels:
              instance: authentik-server

      - job_name: traefik
        scrape_interval: 60s
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: [traefik]
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"
          - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.+);(.+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_label_app]
            target_label: app

      # Storage monitoring
      - job_name: microceph
        static_configs:
          - targets:
              - ${MICROCEPH_ENDPOINT_1}
              - ${MICROCEPH_ENDPOINT_2}
              - ${MICROCEPH_ENDPOINT_3}

      # Network devices monitoring
      - job_name: mktxp
        honor_timestamps: false
        static_configs:
          - targets: [mktxp:49090]
            labels:
              instance: mikrotik-exporter

      - job_name: openwrt
        honor_timestamps: false
        static_configs:
          - targets: [${OPENWRT_ENDPOINT}]
            labels:
              instance: mi4a-wrt

      - job_name: 'ubiquiti-snmp'
        metrics_path: /snmp
        params:
          module: [ubiquiti_airmax]
          auth: [ubiquiti_auth]
        static_configs:
          - targets: ['${LB_ENDPOINT}']
            labels:
              instance: 'lb5-ac'
          - targets: ['${LBAP_ENDPOINT}']
            labels:
              instance: 'lb5-ac-ap'
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - target_label: __address__
            replacement: snmp-exporter:9116

      # Server infrastructure monitoring
      - job_name: server-node
        scrape_interval: 60s
        static_configs:
          - targets: [${DOCKER_ENDPOINT}]
            labels:
              instance: docker
          - targets: [${AAPANEL_ENDPOINT}]
            labels:
              instance: aapanel
          - targets: [${LABS_ENDPOINT}]
            labels:
              instance: 8labs

      - job_name: server-test
        scrape_interval: 60s
        static_configs:
          - targets: [${AZURE_ENDPOINT}]
            labels:
              instance: azure
          - targets: [${KVM_ENDPOINT}]
            labels:
              instance: kvm

      # - job_name: 'kube-scheduler'
      #   static_configs:
      #     - targets: ['10:10259']
      #   scheme: https
      #   tls_config:
      #     insecure_skip_verify: true
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      # - job_name: 'kube-controller-manager'
      #   static_configs:
      #     - targets: ['10:10257']
      #   scheme: https
      #   tls_config:
      #     insecure_skip_verify: true
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs:
  - /metrics
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: monitoring