---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      initContainers:
      - name: config-processor
        image: reg.ygnv.my.id/docker/alpine:3.22.1
        imagePullPolicy: IfNotPresent
        command: ['/bin/sh', '-c']
        args:
          - apk add gettext &&
            envsubst < /config-template/prometheus.yml > /etc/prometheus/prometheus.yml
        volumeMounts:
          - name: config-template
            mountPath: /config-template
          - name: config
            mountPath: /etc/prometheus
        envFrom:
          - secretRef:
              name: prometheus-cred
      containers:
      - name: prometheus
        image: reg.ygnv.my.id/docker/prom/prometheus:v3.6.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 1Gi
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"
          - "--web.enable-lifecycle"
          - "--web.enable-remote-write-receiver"
          - "--storage.tsdb.retention.time=30d"
          - "--storage.tsdb.wal-compression"
          # - "--storage.tsdb.min-block-duration=1h"
          # - "--storage.tsdb.max-block-duration=2h"
          # - "--storage.tsdb.wal-segment-size=64MB"
          # - "--storage.tsdb.head-chunks-write-queue-size=2048"
          # - "--query.max-concurrency=10"
          # - "--enable-feature=agent"
        env:
          - name: GOGC
            value: "50"
        ports:
          - containerPort: 9090
        volumeMounts:
          - name: config
            mountPath: /etc/prometheus
          - name: storage-volume
            mountPath: /prometheus
      volumes:
        - name: config-template
          configMap:
            name: prometheus-config
        - name: config
          emptyDir: {}
        - name: storage-volume
          hostPath:
            path: /mnt/cephfs/docker/monitoring/prometheus
            type: Directory  
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus
  namespace: monitoring
spec:
  entryPoints:
    - http
    - https
  routes:
    - match: Host(`prometheus.ygnv.my.id`)
      kind: Rule
      services:
        - name: prometheus
          port: 9090
          # strategy: drr
  tls:
    certResolver: cloudflare
