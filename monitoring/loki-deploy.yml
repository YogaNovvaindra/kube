apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki
rules:
- apiGroups: [""]
  resources: ["nodes/proxy"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki
subjects:
- kind: ServiceAccount
  name: loki
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
data:
  loki.yaml: |
    auth_enabled: false
    server:
      http_listen_port: 3100
    common:
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
    schema_config:
      configs:
      - from: 2025-05-18
        store: tsdb
        object_store: filesystem
        schema: v13
        index:
          prefix: index_
          period: 24h
    limits_config:
      volume_enabled: true
      max_query_series: 10000
      max_query_lookback: 168h  # 7d in hours
      retention_period: 168h  # 7d in hours
      reject_old_samples: true
      # Oldest allowed sample age (adjust as needed)
      reject_old_samples_max_age: 168h
    compactor:
      working_directory: /tmp/loki/retention
      retention_enabled: true
      compaction_interval: 5m
      retention_delete_delay: 2h
      delete_request_store: filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: loki
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki
    spec:
      serviceAccountName: loki
      containers:
      - name: loki
        image: reg.ygnv.my.id/docker/grafana/loki:3.5.5
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 256Mi
        args:
        - -config.file=/etc/loki/loki.yaml
        - -log.level=warn
        ports:
        - containerPort: 3100
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/loki
        - name: storage
          mountPath: /tmp/loki
      volumes:
      - name: config
        configMap:
          name: loki-config
      - name: storage
        hostPath:
          path: /mnt/cephfs/docker/monitoring/loki
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
spec:
  ports:
  - port: 3100
    targetPort: http
    name: http
  selector:
    app: loki
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: loki
  namespace: monitoring
spec:
  entryPoints:
  - http
  - https
  routes:
  - match: Host(`loki.ygnv.my.id`)
    kind: Rule
    services:
    - name: loki
      port: 3100
  tls:
    certResolver: cloudflare