apiVersion: v1
kind: ConfigMap
metadata:
  name: authentik-env
  namespace: tools
data:
  AUTHENTIK_POSTGRESQL__HOST: "postgres"
  AUTHENTIK_REDIS__HOST: "valkey"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-server
  namespace: tools
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/match-tag: "true"
    keel.sh/pollSchedule: "@every 6h"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: authentik-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: authentik-server
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: authentik-server
          image: ghcr.io/goauthentik/server:latest
          imagePullPolicy: Always
          args: ["server"]
          envFrom:
            - configMapRef:
                name: authentik-env
            - secretRef:
                name: authentik-cred
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
          volumeMounts:
            - mountPath: /media
              name: media-storage
            - mountPath: /certs
              name: certs-storage
            - mountPath: /templates
              name: templates-storage
      volumes:
        - name: media-storage
          hostPath:
            path: /mnt/cephfs/docker/tools/authentik/media
            type: Directory
        - name: certs-storage
          hostPath:
            path: /mnt/cephfs/docker/tools/authentik/certs
            type: Directory
        - name: templates-storage
          hostPath:
            path: /mnt/cephfs/docker/tools/authentik/templates
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-worker
  namespace: tools
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/match-tag: "true"
    keel.sh/pollSchedule: "@every 6h"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: authentik-worker
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: authentik-worker
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: authentik-worker
          image: ghcr.io/goauthentik/server:latest
          imagePullPolicy: Always
          args: ["worker"]
          envFrom:
            - configMapRef:
                name: authentik-env
            - secretRef:
                name: authentik-cred
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
          volumeMounts:
            - mountPath: /media
              name: media-storage
            - mountPath: /certs
              name: certs-storage
            - mountPath: /templates
              name: templates-storage
      volumes:
        - name: media-storage
          hostPath:
            path: /mnt/cephfs/docker/tools/authentik/media
            type: Directory
        - name: certs-storage
          hostPath:
            path: /mnt/cephfs/docker/tools/authentik/certs
            type: Directory
        - name: templates-storage
          hostPath:
            path: /mnt/cephfs/docker/tools/authentik/templates
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: authentik-server
  namespace: tools
spec:
  selector:
    app: authentik-server
  type: LoadBalancer
  externalIPs:
    - 10.1.1.250
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
