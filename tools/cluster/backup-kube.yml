apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-kube-script
  namespace: tools
data:
  backup.sh: |
    #!/bin/bash
    set -euo pipefail
    set -o errtrace

    # Discord notifier helper
    DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL:-""}

    discord_notify() {
      local status="$1"   # "SUCCESS" or "FAILED"
      local title="$2"
      local description="$3"
      local color=$([ "$status" = "SUCCESS" ] && echo 3066993 || echo 15158332)
      curl -sSL -H "Content-Type: application/json" \
        -X POST "$DISCORD_WEBHOOK_URL" \
        -d "{\"embeds\":[{\"title\":\"${title}\",\"description\":\"${description}\",\"color\":${color}}]}"
    }

    # Timestamps
    TS_INIT=$(date +"%Y-%m-%d %H:%M:%S")

    # Configurable env vars (mounted from Secret)
    SRC="/mnt/cephfs/docker"
    DEST="/mnt/Data/Docker/kube"

    BACKUP="$DEST/backup"
    RECYCLE="$DEST/recycle/$(date +%Y-%m-%d)"

    EXCLUDES=(
        --exclude "harbor/data/registry*"
        --exclude "*/harbor/data/registry*"
    )

    # Error trap
    fail() {
      TS_FAIL=$(date +"%Y-%m-%d %H:%M:%S")
      DURATION=$(( $(date +%s) - $(date -d "$TS_INIT" +%s) ))
      discord_notify "FAILED" "ðŸš¨ Rsync Backup FAILED" \
        "**Host:** $HOSTNAME\n**Time:** $TS_FAIL\n**Duration:** ${DURATION}s\n**Error:** Check pod logs for details."
      exit 1
    }
    trap fail ERR

    # Notify start
    discord_notify "SUCCESS" "ðŸ”” Rsync Backup Starting" \
      "**Host:** $HOSTNAME\n**Time:** $TS_INIT\n**Action:** Syncing $SRC â†’ $BACKUP"

    mkdir -p "$BACKUP" "$RECYCLE"

    echo "[INFO] Running rsync..."
    rsync -avhzr --progress --delete \
      --backup --backup-dir="$RECYCLE" \
      "${EXCLUDES[@]}" \
      "$SRC" "$BACKUP/"

    # Finish
    TS_END=$(date +"%Y-%m-%d %H:%M:%S")
    DURATION=$(( $(date +%s) - $(date -d "$TS_INIT" +%s) ))
    SUMMARY="**Host:** $HOSTNAME\n**Time:** $TS_END\n**Duration:** ${DURATION}s\n**Backup:** ${BACKUP}\n**Recycle:** ${RECYCLE}"

    discord_notify "SUCCESS" "âœ… Rsync Backup Completed" "$SUMMARY"
    echo "âœ… Backup finished successfully!"

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-kube
  namespace: tools
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          restartPolicy: OnFailure

          # Init container installs dependencies into a shared emptyDir
          initContainers:
            - name: prepare-tools
              image: debian:trixie-slim
              command:
                - /bin/bash
                - -c
                - |
                  set -e
                  apt-get update -qq && apt-get install -y -qq curl rsync which && \
                  cp $(command -v curl) $(command -v rsync) /tools/ && \
                  echo "âœ… Tools copied to /tools" && \
                  ls -l /tools && \
                  rm -rf /var/lib/apt/lists/*
              volumeMounts:
                - name: tools-bin
                  mountPath: /tools

          containers:
            - name: backup-kube
              image: debian:trixie-slim
              imagePullPolicy: IfNotPresent
              command:
                - /bin/bash
                - -c
                - |
                  cp /tools/* /usr/bin/ && /scripts/backup.sh
              env:
                - name: DISCORD_WEBHOOK_URL
                  valueFrom:
                    secretKeyRef:
                      name: discord-cred
                      key: DISCORD_URL
              volumeMounts:
                - name: tools-bin
                  mountPath: /tools
                - name: backup-script
                  mountPath: /scripts
                - name: backup-storage
                  mountPath: /mnt/Data/Docker/kube
                - name: cephfs-storage
                  mountPath: /mnt/cephfs/docker

          # Volumes shared between init and main container
          volumes:
            - name: tools-bin
              emptyDir: {}
            - name: backup-script
              configMap:
                name: backup-kube-script
                defaultMode: 0755
            - name: backup-storage
              hostPath:
                path: /mnt/Data/Docker/kube
            - name: cephfs-storage
              hostPath:
                path: /mnt/cephfs/docker

                
