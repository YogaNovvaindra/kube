apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: traefik
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: traefik
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8899"
    spec:
      serviceAccountName: traefik
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: [traefik]
              topologyKey: kubernetes.io/hostname
      containers:
        - name: traefik
          image: traefik:v3.4.4
          imagePullPolicy: Always
          resources:
            requests:
              memory: 128Mi
          args:
            - --configfile=/etc/traefik/traefik.yaml
            - --providers.kubernetescrd.leaderelection=true
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: dashboard
              containerPort: 8080
            - name: metrics
              containerPort: 8899
          env:
            - name: CF_API_EMAIL
              valueFrom:
                secretKeyRef:
                  name: traefik-cred
                  key: CF_API_EMAIL
            - name: CF_DNS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: traefik-cred
                  key: CF_DNS_API_TOKEN
          volumeMounts:
            - name: config
              mountPath: /etc/traefik
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: traefik-config
        - name: data
          hostPath:
            path: /mnt/cephfs/docker/traefik
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: traefik
  annotations:
    metallb.io/address-pool: "main-pool"
    metallb.io/allow-shared-ip: "traefik"
spec:
  # externalTrafficPolicy: Local
  type: LoadBalancer
  loadBalancerIP: 10.1.1.52
  selector:
    app: traefik
  # externalIPs:
  #   - 10.1.1.10
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
    - name: dashboard
      port: 8080
      targetPort: dashboard
    - name: metrics
      port: 8899
      targetPort: metrics
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
spec:
  entryPoints:
    - https
  routes:
    - match: Host(`traefik.ygnv.my.id`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
  tls:
    certResolver: cloudflare
    domains:
      - main: ygnv.my.id
        sans:
          - "*.ygnv.my.id"